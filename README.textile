h1. LocalizedLanguageSelect

Rails plugin to provide support for localized <tt><select></tt> menu with language names and for
storing language information as language _code_ (eg. 'sv'), not _name_ (eg. 'Swedish'), in the database.

Uses the Rails internationalization framework ("I18n":http://rails-i18n.org) for translating the names of languages.
Requires Rails 2.2 (released November 21st, 2008) or later versions.

Language names are loaded from hashes in plugin directory, according to <tt>I18n.locale</tt> value.

You can easily translate language codes in your application like this:

<pre>
  <%= I18n.t @user.language, :scope => 'languages' %>  
</pre>

Comes with a Rake task <tt>rake import:language_select locale=de</tt> for importing language names
from Unicode.org's CLDR repository (http://www.unicode.org/cldr/data/charts/summary/root.html)
Don't forget to restart the application when you add new locale.

The code borrows heavily from the LocalizedCountrySelect plugin.
See "localized_country_select":http://github.com/karmi/localized_country_select

h2. Install & Usage

Install as plugin:

<pre>$ rails plugin install https://github.com/kristianmandrup/localized_language_select.git</pre>  

Install as gem:

Insert in Gemfile

<pre>gem 'localized_language_select'</pre>

Then run:

<pre>$ bundle install</pre>  

h2. Usage example

<pre>
  <%= localized_language_select(:user, :language, [], :include_blank => 'Please choose...') %>  
</pre>


will become:

<pre>
  <select name="user[language]" id="user_language">
  <option value="">Please choose...</option>
  <option disabled="disabled" value="">-------------</option>
  <option value="aa">Afar</option>
  ...
  <option value="zza">ZaZa</option>
  </select>  
</pre>
    
for the <tt>en</tt> locale.

h2. Options

@:exclude@ option

<pre>
  <%= localized_language_select(:user, :language, ['English'], :include_blank => 'Please choose...', :exclude => ['Afrikaans']) %>  
</pre>

@:only@ option

<pre>
  <%= localized_language_select(:user, :language, ['English'], :include_blank => 'Please choose...', :only => ['German', 'French']) %>  
</pre>

h2. Framework usage

This plugin should also integrate nicely with various formbuilders, including Formtastic

Formtastic example:

<pre>
<%= semantic_form_for @user do |form| %>  
  ...
  <%= form.input :lang, :as => :language, :priority_languages => ['English'], :include_blank => 'Please choose...', :only => ['German', 'French']) %>    
  ...
<% end %>  
</pre>

h2. Copyright

Copyright (c) 2009 David Cato, released under the MIT license
